{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "LambdaUnderscorehandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/error-log"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "alerts-cloudwatch",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/error-log:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/error-log:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:sns:us-east-1:${AWS::AccountId}:errors"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "*"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:lambda:us-east-1:${AWS::AccountId}:function:error-log"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "*"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/lambda/*:*"
                  }
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": "actual"
      }
    },
    "LambdaUnderscorehandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/alerts-cloudwatch/dev/1656014406523-2022-06-23T20:00:06.523Z/alerts-cloudwatch.zip"
        },
        "Handler": "handler.lambda_handler",
        "Runtime": "python3.7",
        "FunctionName": "error-log",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "ACCOUNT_ID": {
              "Fn::Sub": "${AWS::AccountId}"
            },
            "snsARN": {
              "Fn::Sub": "arn:aws:sns:us-east-1:${AWS::AccountId}:errors"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "LambdaUnderscorehandlerLogGroup"
      ]
    },
    "LambdaUnderscorehandlerLambdaVersiongq2o6kofhCjyNZa5YvZTNQ22495eOyUMpZp29wq6rA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LambdaUnderscorehandlerLambdaFunction"
        },
        "CodeSha256": "ykaacfjzaN2zwa31ErX6F4KkqJO0C1yqFQvIunj0F0Q="
      }
    },
    "LambdaUnderscorehandlerLogsSubscriptionFilterCloudWatchLog1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "DependsOn": "LambdaUnderscorehandlerLambdaPermissionLogsSubscriptionFilterCloudWatchLog",
      "Properties": {
        "LogGroupName": "/aws/lambda/*",
        "FilterPattern": "?ERROR ?WARN ?5xx",
        "DestinationArn": {
          "Fn::GetAtt": [
            "LambdaUnderscorehandlerLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "LambdaUnderscorehandlerLambdaPermissionLogsSubscriptionFilterCloudWatchLog": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaUnderscorehandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": {
          "Fn::Join": [
            "",
            [
              "logs.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com"
            ]
          ]
        },
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":logs:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":log-group:",
              "/aws/lambda/*",
              ":*"
            ]
          ]
        }
      }
    },
    "snsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "errors"
      }
    },
    "MySnsSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": "sahith.palika@bizcloudexperts.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "snsTopic"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-alerts-cloudwatch-dev-ServerlessDeploymentBucketName"
      }
    },
    "LambdaUnderscorehandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LambdaUnderscorehandlerLambdaVersiongq2o6kofhCjyNZa5YvZTNQ22495eOyUMpZp29wq6rA"
      },
      "Export": {
        "Name": "sls-alerts-cloudwatch-dev-LambdaUnderscorehandlerLambdaFunctionQualifiedArn"
      }
    }
  }
}